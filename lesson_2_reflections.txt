* What happens when you initalize a repository? Why do you need to do it?

The folder .git is created. Now I can use all the power of git to keep track of changes.

* How is the staging area different from the working directory and the repository? What value do you think it offers?

Intermediary step

* how can you use the staging area to make sure you have one commit per logical change?

Not sure. The staging area is where files go before commiting.

* What are some situations when branches would be helpful in keeping your history organized? how would brancehs help?

When working on special cases of the main project. Branches are the subdevelopments of the main project.

* How do the diagrams help you visualize the branch structure?

They show the commits, parents, branches.

* What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

All the commits get insertes in chronological order. The diagram shows what was done.

* What are the pros and cons of Git's automatic merging vs. always doing merges manually?

a.m.--pros: saves a looot of work. cons: cannot always be done
m.m.--pros: takes into account programmers. cons: too time consuming
